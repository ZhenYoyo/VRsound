/************************************************************
************************************************************/
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using OscJack;

/************************************************************
************************************************************/
public class StartandEndOsc : MonoBehaviour
{
	/****************************************
	****************************************/
	[SerializeField] string ipAddress = "127.0.0.1";
	[SerializeField] int port = 8000;
	OscClient client;
	public bool sendingStart = false;
	public bool sendingEnd = false;
	public GameObject Player;
	private float PlayerX;

	/****************************************
	****************************************/
	/******************************
	******************************/

	void OnEnable()
	{
		client = new OscClient(ipAddress, port);
	}

	/******************************
	******************************/
	void OnDisable()
	// void OnDestroy()
	{
		client.Dispose();
	}

	/******************************
	******************************/
	void Update()
	{
		/********************
		********************/

		PlayerX = Player.transform.position.x;


        /*if (Input.GetKeyDown(KeyCode.S))
		{
			b_Send = !b_Send;
			if (b_Send) Debug.Log("StartSending");
			else Debug.Log("StopSending");

		}
		*/


        if (OVRInput.GetDown(OVRInput.RawButton.RIndexTrigger)){
			client.Send("/start", PlayerX);
			sendingStart = !sendingStart;
			sendingEnd = false;
		}
		else if (OVRInput.GetUp(OVRInput.RawButton.RIndexTrigger)){
			client.Send("/end", PlayerX);
			sendingEnd = !sendingEnd;
			sendingStart = false;
		}


		/*if (sendingStart)
		{
			client.Send("/start", PlayerX);
		}

		if (sendingEnd)
		{
			client.Send("/end", PlayerX);
		}
		*/

		/*else
		{
			client.Send("/start", 0.520f);
			client.Send("/end", 0.520f);
		}
		*/


		/*if (startDrawing == true && sendX == true)
			{
				//startDrawing = !startDrawing;
				client.Send("/start", PlayerX);
				sendX = !sendX;

				if (startDrawing == false)
				{
					client.Send("/end", PlayerX);
				}
			}

			else
			{
				client.Send("/start", 0.520f);
				client.Send("/end", 0.520f);
			}
		}
		
		*/

		/********************
		public void Send(string address);
		public void Send(string address, int data);
		public void Send(string address, int element1, int element2);
		public void Send(string address, int element1, int element2, int element3);
		public void Send(string address, float data);
		public void Send(string address, float element1, float element2);
		public void Send(string address, float element1, float element2, float element3);
		public void Send(string address, float element1, float element2, float element3, float element4);
		public void Send(string address, string data);
		********************/

	}
}
